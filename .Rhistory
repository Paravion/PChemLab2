dev.off()
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y= ..ndensity.. , color="Stock Price"), binwidth = 0.5)+
stat_function(fun = dnorm, aes(color = "Normal.D"), args = list(mean=mean(zscore),
sd=1))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Lgend title", values = c("red", "black"))
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y= ..ndensity.. , color="Stock Price"), binwidth = 0.5)+
stat_function(fun = dnorm, aes(color = "Normal.D"), args = list(mean=mean(zscore),
sd=1))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Lgend title", values = c("red", "black"))
price.n <- data.frame(price=price$MMM.Close-mean)
png("stat_hw1.png", width = 800, height =800)
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y= ..ndensity.. , color="Stock Price"), binwidth = 0.5)+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Lgend title", values = c("red", "black"))
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y= ..ndensity.. , color="Stock Price"), binwidth = 0.5)+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black"))
dev.off()
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y= ..ncount.. , color="Stock Price"), binwidth = 0.5)+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black"))
plot1 <- ggplot(data=price.n, aes(x=price, y=p))+
geom_point(aes(color="Stock Price"))+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black"))
price.n <- data.frame(price=price$MMM.Close-mean, p=dnorm(price$MMM.Close))
png("stat_hw1.png", width = 800, height =800)
plot1 <- ggplot(data=price.n, aes(x=price, y=p))+
geom_point(aes(color="Stock Price"))+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black"))
plot1 <- ggplot(data=price.n, aes(x=price, y=p))+
geom_point(aes(color="Stock Price"))+
plot1 <- ggplot(data=price.n, aes(x=price, y=p))+
geom_point(aes(color="Stock Price"))+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black"))
dev.off()
ggplot(data=price.n, aes(x=price, y=p))+
geom_point(aes(color="Stock Price"))+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now)",
x="Prices ($100)",
y="Probability")
price.n
head(price.n)
require(quantmod)
require(ggplot2)
require(ggthemes)
getSymbols("MMM",from= '1980-1-1')
price <- as.data.frame(MMM)
price <- as.data.frame(MMM)
mean <- mean(price$MMM.Close)
sd <- sd(price$MMM.Close)
#sacling and noramlizing data
price.z <- (price$MMM.Close-mean)/sd
price.n <- data.frame(price=price.z)
#plotting and ouput
png("stat_hw1.png", width = 800, height =800)
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y = ..ncount.., color="Stock Price"), stat="bin",binwidth = 0.1)+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now) (Normalized)",
x="Prices",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black")) + theme_wsj()
dev.off()
plot1 <- ggplot(data=price.n, aes(x=price))+
geom_freqpoly(aes(y = ..count.., color="Stock Price"), stat="bin",binwidth = 0.1)+
stat_function(fun = dnorm, aes(color = "Normal.D"))+
labs(title = "Close Prices of 3M (1980-now) (Normalized)",
x="Prices",
y="Probability")
plot1 + scale_colour_manual("Legend", values = c("red", "black")) + theme_wsj()
require(ggplot2)
setwd("PChemLab2")
#read data
data0 <- read.csv("data/pchem2_exp2.csv")
head(data0)
data25 <- data0[data0$temp == 25 & data0$time != 58,] #drop the point at time=58
data35 <- data0[data0$temp == 35,]
#k = ln[(v_inf - v_0)/(v_inf - v_t)] / t-t_0
#t_0 = 0 , v_0 = 0
#k = - ln(v_inf - v_r) / t
#ln(v_inf - v_t) = - kt
#k
#make a new data frame for T1
v_inf <- data25[9,"naohV"]
log.v <- log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()
geom_point()+
stat_smooth(method=lm)
#calulate k1 using linear modeling
model1 <- lm(formula = log.v ~ time, data = data25)
print(model1)
v_inf <- data25[9,"naohV"]
log.v <- log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
#calulate k1 using linear modeling
model1 <- lm(formula = log.v ~ time, data = data25)
model <- lm(formula = log.v ~ time, data = data25)
model1 <- lm(formula = log.v ~ time, data = data25)
print(model1)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v)
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model1 <- lm(formula = log.v ~ time, data = data25)
print(model1)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = -0.01645, intercept = 1.22276)
#make a new data frame for T2
v_inf <- data35[12,"naohV"]
log.v <- log(v_inf - data35$naohV)
data0 <- read.csv("data/pchem2_exp2.csv")
head(data0)
data25 <- data0[data0$temp == 25 & data0$time != 58,] #drop the point at time=58
data35 <- data0[data0$temp == 35,]
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
v0 <- (10.6+9.8+10.4)/3
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v)
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model1 <- lm(formula = log.v ~ time, data = data25)
print(model1)
#P_Chem Lab2 Exp2: Hydrolysis of Methyl Acetate
#Coded by Henry Lin
#T1 = 25 degree C, T2 = 35 degree
require(ggplot2)
setwd("PChemLab2")
#read data
data0 <- read.csv("data/pchem2_exp2.csv")
head(data0)
data25 <- data0[data0$temp == 25 & data0$time != 58,] #drop the point at time=58
data35 <- data0[data0$temp == 35,]
#calculate v0
v0 <- (10.6+9.8+10.4)/3
#k = ln[(v_inf - v_0)/(v_inf - v_t)] / t-t_0
#t_0 = 0 , v_0 = 10.26
#k = [ln(v_inf - v_0) - ln(v_inf - v_0)] / t
#[ln(v_inf - v_0) - ln(v_inf - v_0)] = kt
#k = slope
#make a new data frame for T1
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v)
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model1 <- lm(formula = log.v ~ time, data = data25)
print(model1)
#plotting
k1 <- model1["time"]
k1 <- as.numeric(model1["time"])
model1["time"]
print(model1)
v_inf <- data35[12,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data35$naohV)
v_inf <- data35[12,"naohV"]
data35 <- data35[1:10,]
log.v <- log (v_inf-v0) - log(v_inf - data35$naohV)
data35 <- data.frame(data35, log.v)
plot(data35$time,data35$log.v)
#calulate k2 using linear modeling
model2 <- lm(formula = log.v ~ time, data = data35)
print(model2)
k1 <- coefficients(model1)["time"]
intc <- coefficients(model1)["(intercept)"]
untc
intc
coefficients(model1)["(intercept)"]
model1
k <- coefficients(model1)["time"]
intc <- coefficients(model1)["(Intercept)"]
T1 <- 25, T2 <- 35
T1 <- 25
T2 <- 35
summary(model1)
#P_Chem Lab2 Exp2: Hydrolysis of Methyl Acetate
#Coded by Henry Lin
#T1 = 25 degree C, T2 = 35 degree
require(ggplot2)
setwd("PChemLab2")
#read data
data0 <- read.csv("data/pchem2_exp2.csv")
head(data0)
data25 <- data0[data0$temp == 25 & data0$time != 58,] #drop the point at time=58
data35 <- data0[data0$temp == 35,]
#calculate v0
v0 <- (10.6+9.8+10.4)/3
#k = ln[(v_inf - v_0)/(v_inf - v_t)] / t-t_0
#t_0 = 0 , v_0 = 10.26
#k = [ln(v_inf - v_0) - ln(v_inf - v_0)] / t
#[ln(v_inf - v_0) - ln(v_inf - v_0)] = kt
#k = slope
#make a new data frame for T1
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v) #just for checking if the trend is right
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model <- lm(formula = log.v ~ time, data = data25)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k1 <- k
summary(model)
#plotting
png("exp2/t25.png", width = 1000, height = 1000)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=25]",
x="ln",
y="t(sec)")+
theme_bw()
dev.off()
#plotting
png("exp2_t25.png", width = 1000, height = 1000)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=25]",
x="ln",
y="t(sec)")+
theme_bw()
dev.off()
#make a new data frame for T2
v_inf <- data35[12,"naohV"]
data35 <- data35[1:10,]
log.v <- log (v_inf-v0) - log(v_inf - data35$naohV)
data35 <- data.frame(data35, log.v)
plot(data35$time,data35$log.v)
#calulate k2 using linear modeling
model <- lm(formula = log.v ~ time, data = data35)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k2 <- k
summary(model)
#plotting
png("exp2_t35.png", width = 1000, height = 1000)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=35]",
x="ln",
y="t(sec)")+
theme_bw()
dev.off()
#compute half-life
#t_1/2 = 0.693/k
hl1 <- 0.693/k1
hl2 <- 0.693/k2
#calculate Ea
#Ea = R*T1*T2/(T2-T1)*ln(k2/k1)
Ea <- 8.314*25*35/(35-25)*log(k2/k1)
#show the answers
print(paste0("k1 =",k1,"k2 = ",k2))
print(paste0("hl1 =",hl1,"hl2 = ",hl2))
print(paste0("Ea =",Ea))
#P_Chem Lab2 Exp2: Hydrolysis of Methyl Acetate
#Coded by Henry Lin
#T1 = 25 degree C, T2 = 35 degree
require(ggplot2)
require(ggthemes)
setwd("PChemLab2")
#read data
data0 <- read.csv("data/pchem2_exp2.csv")
head(data0)
data25 <- data0[data0$temp == 25 & data0$time != 58,] #drop the point at time=58
data35 <- data0[data0$temp == 35,]
#calculate v0
v0 <- (10.6+9.8+10.4)/3
#k = ln[(v_inf - v_0)/(v_inf - v_t)] / t-t_0
#t_0 = 0 , v_0 = 10.26
#k = [ln(v_inf - v_0) - ln(v_inf - v_0)] / t
#[ln(v_inf - v_0) - ln(v_inf - v_0)] = kt
#k = slope
#make a new data frame for T1
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v) #just for checking if the trend is right
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model <- lm(formula = log.v ~ time, data = data25)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k1 <- k
summary(model)
#plotting
png("exp2_t25.png", width = 1000, height = 1000)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=25]",
x="ln",
y="t(sec)")+
theme_minimal()
dev.off()
#make a new data frame for T2
v_inf <- data35[12,"naohV"]
data35 <- data35[1:10,]
log.v <- log (v_inf-v0) - log(v_inf - data35$naohV)
data35 <- data.frame(data35, log.v)
plot(data35$time,data35$log.v)
#calulate k2 using linear modeling
model <- lm(formula = log.v ~ time, data = data35)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k2 <- k
summary(model)
#plotting
png("exp2_t35.png", width = 1000, height = 1000)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=35]",
x="ln",
y="t(sec)")+
theme_minimal()
dev.off()
#compute half-life
#t_1/2 = 0.693/k
hl1 <- 0.693/k1
hl2 <- 0.693/k2
#calculate Ea
#Ea = R*T1*T2/(T2-T1)*ln(k2/k1)
Ea <- 8.314*25*35/(35-25)*log(k2/k1)
#show the answers
print(paste0("k1 = ",k1," ","k2 = ",k2))
print(paste0("hl1 = ",hl1," ","hl2 = ",hl2))
print(paste0("Ea = ",Ea))
#make a new data frame for T1
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v) #just for checking if the trend is right
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model <- lm(formula = log.v ~ time, data = data25)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k1 <- k
summary(model)
#plotting
png("exp2_t25.png", width = 500, height = 500)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=25]",
x="ln",
y="t(sec)")+
theme_minimal()
dev.off()
#make a new data frame for T2
v_inf <- data35[12,"naohV"]
data35 <- data35[1:10,]
log.v <- log (v_inf-v0) - log(v_inf - data35$naohV)
data35 <- data.frame(data35, log.v)
plot(data35$time,data35$log.v)
#calulate k2 using linear modeling
model <- lm(formula = log.v ~ time, data = data35)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k2 <- k
summary(model)
#plotting
png("exp2_t35.png", width = 500, height = 500)
ggplot(data = data35, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=35]",
x="ln",
y="t(sec)")+
theme_minimal()
dev.off()
#compute half-life
#t_1/2 = 0.693/k
hl1 <- 0.693/k1
hl2 <- 0.693/k2
#calculate Ea
#Ea = R*T1*T2/(T2-T1)*ln(k2/k1)
Ea <- 8.314*25*35/(35-25)*log(k2/k1)
#show the answers
print(paste0("k1 = ",k1," ","k2 = ",k2))
print(paste0("hl1 = ",hl1," ","hl2 = ",hl2))
print(paste0("Ea = ",Ea))
ggplot(data = data35, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=35]",
x="ln",
y="t(sec)")+
theme_excel()
ggplot(data = data35, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=35]",
x="ln",
y="t(sec)")+
theme_gray()
#P_Chem Lab2 Exp2: Hydrolysis of Methyl Acetate
#Coded by Henry Lin
#T1 = 25 degree C, T2 = 35 degree
require(ggplot2)
require(ggthemes)
setwd("PChemLab2")
#read data
data0 <- read.csv("data/pchem2_exp2.csv")
head(data0)
data25 <- data0[data0$temp == 25 & data0$time != 58,] #drop the point at time=58
data35 <- data0[data0$temp == 35,]
#calculate v0
v0 <- (10.6+9.8+10.4)/3
#k = ln[(v_inf - v_0)/(v_inf - v_t)] / t-t_0
#t_0 = 0 , v_0 = 10.26
#k = [ln(v_inf - v_0) - ln(v_inf - v_0)] / t
#[ln(v_inf - v_0) - ln(v_inf - v_0)] = kt
#k = slope
#make a new data frame for T1
v_inf <- data25[9,"naohV"]
log.v <- log (v_inf-v0) - log(v_inf - data25$naohV)
data25 <- data.frame(data25, log.v)
plot(data25$time,data25$log.v) #just for checking if the trend is right
data25 <- data25[1:7,]
#calulate k1 using linear modeling
model <- lm(formula = log.v ~ time, data = data25)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k1 <- k
summary(model)
#plotting
png("exp2_t25.png", width = 500, height = 500)
ggplot(data = data25, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=25]",
x="ln",
y="t(sec)")+
theme_gray()
dev.off()
#make a new data frame for T2
v_inf <- data35[12,"naohV"]
data35 <- data35[1:10,]
log.v <- log (v_inf-v0) - log(v_inf - data35$naohV)
data35 <- data.frame(data35, log.v)
plot(data35$time,data35$log.v)
#calulate k2 using linear modeling
model <- lm(formula = log.v ~ time, data = data35)
k <- coefficients(model)["time"]
intc <- coefficients(model)["(Intercept)"]
k2 <- k
summary(model)
#plotting
png("exp2_t35.png", width = 500, height = 500)
ggplot(data = data35, aes(x=time, y=log.v))+
geom_point()+
geom_abline(slope = k, intercept = intc)+
labs(title= "ln vs t(sec) [T=35]",
x="ln",
y="t(sec)")+
theme_gray()
dev.off()
#compute half-life
#t_1/2 = 0.693/k
hl1 <- 0.693/k1
hl2 <- 0.693/k2
#calculate Ea
#Ea = R*T1*T2/(T2-T1)*ln(k2/k1)
Ea <- 8.314*25*35/(35-25)*log(k2/k1)
#show the answers
print(paste0("k1 = ",k1," ","k2 = ",k2))
print(paste0("hl1 = ",hl1," ","hl2 = ",hl2))
print(paste0("Ea = ",Ea))
